@page "/add-product"
@using BlazorClient.Data
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Добавление нового товара</h3>

<EditForm Model="@newProduct" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Название:</label>
        <InputText @bind-Value="newProduct.Name" class="form-control" />
        <ValidationMessage For="@(() => newProduct.Name)" />
    </div>

    <div class="form-group">
        <label>Цена:</label>
        <InputNumber @bind-Value="newProduct.Price" class="form-control" />
        <ValidationMessage For="@(() => newProduct.Price)" />
    </div>

    <div class="form-group">
        <label>Описание:</label>
        <InputTextArea @bind-Value="newProduct.Description" class="form-control" />
        <ValidationMessage For="@(() => newProduct.Description)" />
    </div>

    <button type="submit" class="btn btn-primary">Сохранить</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Отмена</button>
</EditForm>

@code {
    private Product newProduct = new Product();

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/products", newProduct);
            
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/products");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Ошибка: {error}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Исключение: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/products");
    }
}