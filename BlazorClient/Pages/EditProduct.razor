@page "/edit-product/{id}"
@using BlazorClient.Data
@using BlazorClient.Services
@using System.Linq
@using System.ComponentModel.DataAnnotations
@inject ProductService ProductService
@inject NavigationManager Navigation

<h3>Редактирование товара</h3>

@if (product == null)
{
    <p>Загрузка данных...</p>
}
else
{
    <EditForm Model="@product" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Название:</label>
            <InputText id="name" class="form-control" @bind-Value="product.Name" />
            <ValidationMessage For="@(() => product.Name)" />
        </div>

        <div class="form-group">
            <label for="price">Цена:</label>
            <InputNumber id="price" class="form-control" @bind-Value="product.Price" />
            <ValidationMessage For="@(() => product.Price)" />
        </div>

        <div class="form-group">
            <label for="description">Описание:</label>
            <InputTextArea id="description" class="form-control" @bind-Value="product.Description" />
            <ValidationMessage For="@(() => product.Description)" />
        </div>

        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Отмена</button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    private Product? product;

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(Id, out int productId))
        {
            var products = await ProductService.GetProductsAsync();
            product = products?.FirstOrDefault(p => p.Id == productId);
        }
    }

    private async Task HandleValidSubmit()
    {
        if (product != null)
        {
            await ProductService.UpdateProductAsync(product);
            Navigation.NavigateTo("/products");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/products");
    }
}